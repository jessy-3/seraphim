# Seraphim Trading System - Docker Compose Configuration
# version: '3.9' # Removed as it's obsolete in new Docker Compose versions

services:
  redis:
    image: 'redis:latest'
    restart: always
    command: redis-server --appendonly yes
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data

  ib-gateway:
    image: ghcr.io/gnzsnz/ib-gateway:latest
    environment:
      - TWS_USERID=${IBKR_USERNAME}
      - TWS_PASSWORD=${IBKR_PASSWORD}
      - TRADING_MODE=paper
      - READ_ONLY_API=no
      - TWOFA_TIMEOUT_ACTION=restart
    ports:
      - "4002:4002"  # Live trading port
      - "4004:4004"  # Gateway status port
    restart: unless-stopped
    volumes:
      - ib_gateway_settings:/opt/ibc/settings

  postgres:
    build: ./postgres
    restart: unless-stopped
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: seraphim
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 2022pass

  # bot: # Moved to legacy, will be reimplemented
  #   build: ./bot
  #   restart: unless-stopped
  #   depends_on:
  #     - redis
  #     - postgres
  #   environment:
  #     - REDIS_HOST=redis
  #     - REDIS_PORT=6379

  web:
    build: ./web
    ports:
      - "8082:8082"
    depends_on:
      - redis
      - postgres
    env_file:
      - .env
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      # - SERVER_IP=dev.ismartinfo.net
      - SERVER_IP=localhost
      - SERVER_PORT=8082
    volumes:
      - ./web:/app

  celery-worker:
    build: ./web
    command: celery -A seraphim worker --loglevel=info
    depends_on:
      - redis
      - postgres
      - web
    env_file:
      - .env
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    restart: unless-stopped
    volumes:
      - ./web:/app

  celery-beat:
    build: ./web
    command: celery -A seraphim beat --loglevel=info
    depends_on:
      - redis
      - postgres
      - celery-worker
    env_file:
      - .env
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    restart: unless-stopped
    volumes:
      - ./web:/app

  nginx:
    build: ./nginx
    ports:
      - "80:80" 
      - "443:443"
    depends_on:
      - web
    volumes:
      # - type: bind
      #   source: /etc/letsencrypt/live/ismartinfo.net/fullchain.pem
      #   target: /etc/letsencrypt/live/ismartinfo.net/fullchain.pem
      #   read_only: true
      # - type: bind
      #   source: /etc/letsencrypt/live/ismartinfo.net/privkey.pem
      #   target: /etc/letsencrypt/live/ismartinfo.net/privkey.pem
      #   read_only: true
      - type: bind
        source: /usr/local/etc/openssl/ssl/localhost.crt
        target: /etc/ssl/local/localhost.crt
        read_only: true
      - type: bind
        source: /usr/local/etc/openssl/ssl/localhost.key
        target: /etc/ssl/local/localhost.key
        read_only: true
      - seraphim-static:/web/static
    restart: always

  # go: # Removed - functionality migrated to Django
  #   build:
  #     context: ./gobackend
  #     dockerfile: Dockerfile
  #   depends_on:
  #     - redis
  #     - postgres
  #   ports:
  #     - "8083:8083"
  #   environment:
  #     REDIS_HOST: redis
  #     REDIS_PORT: 6379
  #     PG_HOST: postgres
  #     PG_PORT: 5432
  #     PG_DATABASE: seraphim
  #     PG_USER: postgres
  #     PG_PASSWORD: 2022pass

volumes:
  redis-data:
  postgres-data:
  seraphim-static:
  ib_gateway_settings: