"""
Django settings for seraphim project.

Generated by 'django-admin startproject' using Django 4.0.3.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""

from pathlib import Path
import os
import sys
from decouple import config

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-h95p#)8g%5@hi8_!u+9ivl8)9+u+09e_k#rrkiva4m$+q!$ish'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['dev.ismartinfo.net', 'ismartinfo.net', 'localhost']

CSRF_TRUSTED_ORIGINS = ['https://dev.ismartinfo.net', 'https://localhost', 'wss://dev.ismartinfo.net']

# Application definition

INSTALLED_APPS = [
    'daphne',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.humanize',
    'django_crontab',
    'corsheaders',
    'rest_framework',
    'social_django',
    'channels',
    'taggit',
    'crispy_forms',
    'seraphim',
    'api',
    # 'trading',  # Legacy trading view, disabled in favor of seraphim dashboard
]

CRISPY_TEMPLATE_PACK = 'bootstrap3'  # Add
TAGGIT_CASE_INSENSITIVE = True


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'social_django.middleware.SocialAuthExceptionMiddleware',  # Add
]

ROOT_URLCONF = 'seraphim.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'seraphim.wsgi.application'

ASGI_APPLICATION = 'seraphim.asgi.application'


# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

# DATABASES = {
#    'default': {
#        'ENGINE': 'django.db.backends.sqlite3',
#        'NAME': BASE_DIR / 'sqlite/seraphim.db',
#    }
# }
DATABASES = {
    'default': {
#        'ENGINE': 'django.db.backends.mysql',
#        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'seraphim',
        'USER': 'postgres',
        'PASSWORD' : '2022pass',
        # 'HOST':'host.docker.internal',    # only for docker running locally
        # 'HOST':'localhost',
        'HOST':'postgres',     # for docker service postgres
        'PORT':5432,
    }
}

CHANNEL_LAYERS = {
    "default": {
        # "BACKEND": "channels.layers.InMemoryChannelLayer",
        "BACKEND": "channels_redis.core.RedisChannelLayer",
        "CONFIG": {
            # "hosts": [("localhost", 6379)],
            "hosts": [("redis", 6379)],
            # "hosts": [("redis-server-name", 6379)],  #  'redis://h:<password>;@<redis Endpoint>:<port>'
        },
    },
}

# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# External API Configuration
# Kraken API - loaded from environment variables
KRAKEN_API_KEY = config('KRAKEN_API_KEY', default='')
KRAKEN_API_SECRET = config('KRAKEN_API_SECRET', default='')

# Interactive Brokers API (to be configured later)
IBKR_API_ENABLED = config('IBKR_API_ENABLED', default=False, cast=bool)
IBKR_CLIENT_ID = config('IBKR_CLIENT_ID', default='')

# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

# Define the default IP and port for the development server
DEFAULT_SERVER_IP = 'localhost'
DEFAULT_SERVER_PORT = '8082'

# Override the default values if specified in the environment variables
SERVER_IP = os.environ.get('SERVER_IP', DEFAULT_SERVER_IP)
SERVER_PORT = os.environ.get('SERVER_PORT', DEFAULT_SERVER_PORT)
# Set the development server's IP and port
if 'runserver' in sys.argv:
    # Override the command-line arguments
    sys.argv = ['manage.py', 'runserver', f'{SERVER_IP}:{SERVER_PORT}']


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATIC_ROOT = os.path.join(BASE_DIR, 'static')
STATIC_URL = '/static/'
#STATIC_URL = 'https://' + SERVER_IP +'/web/static/'
# STATICFILES_DIRS = [os.path.join(BASE_DIR, "web/static"),]

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

# Add the settings below
SWAGGER_SETTINGS = {
    'SHOW_REQUEST_HEADERS': True,
    'SUPPORTED_SUBMIT_METHODS': [
        'get',
        'post',
    ],
#    'USE_SESSION_AUTH' : False,
}
REST_FRAMEWORK = {
    'DEFAULT_SCHEMA_CLASS':'rest_framework.schemas.coreapi.AutoSchema',
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.BasicAuthentication',
        'rest_framework.authentication.SessionAuthentication',
    )
}

# Configure the social login
try:
    from . import github_settings
    SOCIAL_AUTH_GITHUB_KEY = github_settings.SOCIAL_AUTH_GITHUB_KEY
    SOCIAL_AUTH_GITHUB_SECRET = github_settings.SOCIAL_AUTH_GITHUB_SECRET
except:
    print('When you want to use social login, please see mysite/github_settings-dist.py')

# https://python-social-auth.readthedocs.io/en/latest/configuration/django.html#authentication-backends
# https://simpleisbetterthancomplex.com/tutorial/2016/10/24/how-to-add-social-login-to-django.html
AUTHENTICATION_BACKENDS = (
    'social_core.backends.github.GithubOAuth2',
    # 'social_core.backends.twitter.TwitterOAuth',
    # 'social_core.backends.facebook.FacebookOAuth2',

    'django.contrib.auth.backends.ModelBackend',
)
CRONJOBS = (
    # ('*/5 * * * *', 'crontabapp.utils.operat_info_save','>/tmp/1.log'),
    ('*/1 * * * *', 'api.pycrons.min_cron_job', '>>/tmp/mincronjob.log'),
    ('*/5 * * * *', 'api.pycrons.my_cron_job', '>>/tmp/mycronjob.log'),
)

SECURE_SSL_REDIRECT = False
SESSION_COOKIE_SECURE = True
CSRF_COOKIE_SECURE = True
SECURE_HSTS_SECONDS = 31536000  # Enable HSTS with a 1-year duration
SECURE_HSTS_INCLUDE_SUBDOMAINS = True
SECURE_HSTS_PRELOAD = True

LOGOUT_REDIRECT_URL = '/'
LOGIN_REDIRECT_URL = '/'

# Don't set default LOGIN_URL - let django.contrib.auth set it when it is loaded
# LOGIN_URL = '/accounts/login'

CORS_ORIGIN_ALLOW_ALL = True
CORS_ALLOW_CREDENTIALS = True
CORS_ALLOW_ALL_ORIGINS = True
CORS_ALLOWED_METHODS = ['GET', 'POST', 'OPTIONS']
CORS_ALLOWED_HEADERS = ['Content-Type', 'Authorization']
X_FRAME_OPTIONS = 'SAMEORIGIN'

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Celery Configuration
CELERY_BROKER_URL = 'redis://redis:6379/0'
CELERY_RESULT_BACKEND = 'redis://redis:6379/0'
CELERY_ACCEPT_CONTENT = ['json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'
CELERY_TIMEZONE = 'UTC'
CELERY_TASK_TRACK_STARTED = True
CELERY_TASK_TIME_LIMIT = 30 * 60  # 30 minutes max per task
